// primitives

const AND = new EntityInfo(
    "m 100,40 c 0,22.091395 -17.90861,40 -40,40 H 0 V 0 h 60 c 22.091387,0 40,17.90861 40,40 z",
    [[0, 15, -40, 15], [0, 65, -40, 65]],
    [[100, 40, 140, 40]],
    input => input == 3
);

const OR = new EntityInfo(
    "M 0,15 C 5.3179,31.212261 5.3179,48.78772 0,65 -1.69518,70.16795 -3.93072,75.19738 -6.70663,80 l 37.40938,0 c 29.611122,0 55.464872,-16.087958 69.29726,-40 C 86.16763,16.08794 60.313872,0 30.702581,0 H -6.70663 C -3.93072,4.802621 -1.69518,9.8320505 0,15 Z",
    [[0, 15, -40, 15], [0, 65, -40, 65]],
    [[100, 40, 140, 40]],
    input => !!input
);

const XOR = new EntityInfo(
    "M -6.70663,0 C -3.93072,4.80261 -1.69517,9.8320399 0,15 c 5.31789,16.212269 5.31789,33.78773 0,50 -1.69517,5.16796 -3.93072,10.19739 -6.70663,15 M 16.30926,15 c 5.317888,16.212271 5.317888,33.78773 0,50 -1.69518,5.16796 -3.93072,10.19739 -6.70663,15 l 19.909058,0 c 29.61112,1.0 55.46487,-16.08795 69.297252,-40 C 84.976568,16.08793 59.122808,-3.4873402e-5 29.511518,-2e-5 L 9.60263,-10e-6 c 2.77591,4.80261 5.01145,9.8320399 6.70663,15 z",
    [[0, 15, -40, 15], [0, 65, -40, 65]],
    [[100, 40, 140, 40]],
    input => input == 1 || input == 2
);

const NOT = new EntityInfo(
    "M 80.621772,35 A 10,10 0 0 1 70.62177,45 10,10 0 0 1 60.621772,35 10,10 0 0 1 70.62177,25 10,10 0 0 1 80.621772,35 Z m -20,0 L 0,0 v 70 z",
    [[0, 35, -40, 35]],
    [[80.621762, 35, 120, 35]],
    input => !input
);

// standard input/output

const INPUT_HIGH = new EntityInfo(
    "M 40,25 A 15,15 0 0 1 25,40 15,15 0 0 1 10,25 15,15 0 0 1 25,10 15,15 0 0 1 40,25 Z M 50,25 A 25,25 0 0 1 25,50 25,25 0 0 1 0,25 25,25 0 0 1 25,0 25,25 0 0 1 50,25 Z",
    [],
    [[50, 25, 90, 25]],
    () => 1,
    (item, l, h, hh) => {
        h.moveTo(25 + item.x, 25 + item.y);
        h.arc(25 + item.x, 25 + item.y, 8, 0, Math.PI * 2);
        hh.moveTo(25 + item.x, 25 + item.y);
        hh.arc(25 + item.x, 25 + item.y, 5, 0, Math.PI * 2);
    }
)

const INPUT_LOW = new EntityInfo(
    INPUT_HIGH.path,
    INPUT_HIGH.inputPins,
    INPUT_HIGH.outputPins,    
    () => 0,
    (item, l) => {
        l.moveTo(25 + item.x, 25 + item.y);
        l.arc(25 + item.x, 25 + item.y, 8, 0, Math.PI * 2);
    }
)

const INPUT_CLK = new EntityInfo(
    "m 40,25 c 0,8.284271 -6.715729,15 -15,15 -8.284271,0 -15,-6.715729 -15,-15 0,-8.284271 6.715729,-15 15,-15 8.284271,0 15,6.715729 15,15 z m 10,0 C 50,38.807119 38.807119,50 25,50 11.192881,50 0,38.807119 0,25 0,11.192881 11.192881,0 25,0 38.807119,0 50,11.192881 50,25 m -37.993267,7.500001 12.993267,0 0,-15 h 12.993267",
    [],
    [[50, 25, 90, 25]],
    () => new Date().getTime() % 1500 > 750
)

const OUTPUT = new EntityInfo(
    "M 50,25 A 25,25 0 0 1 25,50 25,25 0 0 1 0,25 25,25 0 0 1 25,0 25,25 0 0 1 50,25 Z",
    [[0, 25, -40, 25]],
    [[50, 25, 70, 25]],
    input => !!input,
    (item, l, h, hh) => {
        if (item.input) {
            h.moveTo(25 + item.x, 25 + item.y);
            h.arc(25 + item.x, 25 + item.y, 17.5, 0, Math.PI * 2);
            hh.moveTo(25 + item.x, 25 + item.y);
            hh.arc(25 + item.x, 25 + item.y, 12.5, 0, Math.PI * 2);
        } else {
            l.moveTo(25 + item.x, 25 + item.y);
            l.arc(25 + item.x, 25 + item.y, 17, 0, Math.PI * 2);
        }
    }
)

// integrated circuits

const FA = new EntityInfo(
    "M 92.5,110 H 78 V 90.000001 H 92.5 M 9.9999997,20 l 11.9999953,1e-6 m -11.999995,40 12,-3e-6 v 10 H 10 V 50.000001 l 10,0.03612 v 9.963877 M 24.5,110 H 10 V 90.000001 h 14.5 m 68,-80 H 78 v 10 h 12 v 10 H 75.5 M 9.999995,32.5 V 10.000001 h 12 V 32.5 M 0,0 H 100 V 120 H 0 Z",
    [[0, 20, -40, 20], [0, 60, -40, 60], [0, 100, -40, 100]],
    [[100, 20, 140, 20], [100, 100, 140, 100]],
    input => (input & 1) + ((input & 2) >> 1) + ((input & 4) >> 2)
)

const JKFF = new EntityInfo(
    "M 0,75.000001 19.99999,60.000002 0,45 m 120,55 c 0,5.52284 -4.47715,10 -10,10 -5.52284,0 -10,-4.47715 -10,-10 0,-5.522851 4.47716,-10 10,-10 5.52285,0 10,4.477152 10,10 z M 0,60.000002 C 0,65.522848 -4.47716,70 -10,70 c -5.52285,0 -10,-4.477152 -10,-9.999998 0,-5.522847 4.47715,-10.000001 10,-10.000001 5.52284,0 10,4.477154 10,10.000001 z m 76,21 H 93 M 84.5,30.5 V 20 h 6 m -6,90.5 V 100 h 6 m -12,-10.499999 h 12 V 110.5 h -12 z M 18.5,100 l 3.01953,3.06885 v 9.77762 M 9.49999,86.846473 v 25.999997 m 0,-12.84647 h 8.98066 l 3.01954,-3.068856 V 91.931146 M 21.5,7 V 30.5 H 9.49999 V 23.45626 M 0,0 H 100 V 120 H 0 Z m 78.5,9.5 h 12 v 21 h -12 z",
    [[0, 20, -40, 20], [-20, 60, -40, 60], [0, 100, -40, 100]],
    [[100, 20, 140, 20], [120, 100, 140, 100]],
    (input, item) => {
        if (!item.output) return 2;
        if ((~input & 2) && (~item.output & 4)) {
            switch (input) {
                case 0: return item.output | 4;
                case 1: return 5;
                case 4: return 6;
                case 5: return (item.output ^ 3) | 4;
            }
        }
        if (input & 2) return item.output & 3;
        return item.output;
    }
)

const _4BIT_ADDER = new EntityInfo(

);

const _7SEG_DEC = new EntityInfo(
    "M 78.000001,220 H 90 M 78.000001,232.5 V 210 L 92.5,210.0361 M 78.000001,180 H 90 m 2.500002,10 H 78.000001 V 170 L 92.5,170.0361 M 78,130 h 10 l 2,10 -2,10 H 78 m 0,2.5 v -25 M 10,130 h 10 l 2,10 -2,10 H 10 m 0,2.5 v -25 m 68,-107.499998 11.999995,1e-6 M 78,60.000004 l 12,-3e-6 v 9.999998 H 78 V 50.000002 l 10,0.03612 V 60 M 77.999995,32.500002 V 10.000003 h 12 V 32.500002 M 91.5,250 H 78 v 20 h 12 v -10 h -6.5 m 9,-150 H 78 V 90.000001 H 92.5 M 9.9999997,20 l 11.9999953,1e-6 m -11.999995,40 12,-3e-6 v 10 H 10 V 50.000001 l 10,0.03612 v 9.963877 M 24.5,110 H 10 V 90.000001 H 24.5 M 9.999995,32.5 V 10.000001 h 12 V 32.5 M 0,0 H 100 V 280 H 0 Z",
    [[0, 20, -40, 20], [0, 60, -40, 60], [0, 100, -40, 100], [0, 140, -40, 140]],
    [[100, 20, 140, 20], [100, 60, 140, 60], [100, 100, 140, 100], [100, 140, 140, 140], [100, 180, 140, 180], [100, 220, 140, 220], [100, 260, 140, 260]],
    (input) => [0b0111111, 0b0000110, 0b1011011, 0b1001111, 0b1100110, 0b1101101, 0b1111101, 0b0000111, 0b1111111, 0b1101111, 0b1110111, 0b1111100, 0b0111001, 0b1011110, 0b1111001, 0b1110001][input]
);